apiVersion: extensions/v1beta1
kind: Deployment

metadata:
  name: {{.app}}-{{.env}}

spec:
  replicas: {{.replicas}}
  template:
    metadata:
      labels:
        app: {{.app}}
        env: {{.env}}
    spec:
      containers:
        - name: {{.app}}
          image: {{.image}}
          ports:
            - containerPort: 80
          env:
            - name: COMMIT
              value: {{.commit}}
          imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: {{.app}}-{{.env}}
  labels:
    apps: {{.app}}-{{.env}}
spec:
  type: NodePort
  ports:
    - name: http
      protocol: TCP
      port: 80

  selector:
    app: {{.app}}
    env: {{.env}}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: traefik
  name: {{.app}}-{{.env}}
spec:
  rules:
    - host: "{{.env}}.interrobang.consulting"
      http:
        paths:
          - backend:
              serviceName: {{.app}}-{{.env}}
              servicePort: http
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: traefik
  name: {{.app}}-{{.env}}-prod
spec:
  rules:
    - host: "interrobang.consulting"
      http:
        paths:
          - backend:
              serviceName: {{.app}}-{{.env}}
              servicePort: http
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: {{.app}}-{{.env}}
spec:
  scaleTargetRef:
    apiVersion: apps/v1beta1
    kind: Deployment
    name: {{.app}}-{{.env}}
  minReplicas: {{.min_replicas}}
  maxReplicas: {{.max_replicas}}
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 50
  - type: Pods
    pods:
      metricName: packets-per-second
      targetAverageValue: 1k
  - type: Object
    object:
      metricName: requests-per-second
      target:
        apiVersion: extensions/v1beta1
        kind: Ingress
        name: {{.app}}-{{.env}}
      targetValue: 10k
